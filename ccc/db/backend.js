const express = require('express')
const db = require(__dirname + '/db_connect')
const moment = require('moment-timezone')
const date = 'YYYY-MM-DD'
const time = 'HH:mm:ss'
const router = express.Router()
const fs = require('fs')
const multer = require('multer')
const upload = multer({ dest: 'tmp_uploads/' })
const { v4: uuidv4 } = require('uuid')

// SELECT *  ,(SELECT COUNT(*) FROM `coupon_item` WHERE `cpi_cp_id`=`cp_id`) AS `cp_getedCount` FROM `coupon` INNER JOIN `coupon_rule` ON `coupon`.`cp_rule` = `coupon_rule`.`cpr_id` WHERE `cp_id` NOT IN (SELECT `cpi_cp_id` FROM `coupon_item` WHERE `cpi_mb_id` = 6)

//讀取表格
router.get('/db/:table?', (req, res) => {
  let sql = `SELECT * FROM ${req.params.table} `
  db.queryAsync(sql).then(r => {
    r.forEach(e => {
      e.date = moment(e.created_at).format(date)
      e.time = moment(e.created_at).format(time)
    })

    return res.json(r)
  })
})

// 讀取 GARMIN 商品資料
router.get('/getGarmin', (req, res) => {
  let sql = `SELECT * FROM \`items\` WHERE name = "GARMIN"`
  db.queryAsync(sql).then(r => {
    r.forEach(e => {
      e.date = moment(e.created_at).format(date)
      e.time = moment(e.created_at).format(time)
    })

    return res.json(r)
  })
})

// 讀取 全台北 7-11 資料
router.get('/get711', (req, res) => {
  let sql = `SELECT * FROM \`taipei711\``
  db.queryAsync(sql).then(r => {
    r.forEach(e => {
      e.date = moment(e.created_at).format(date)
      e.time = moment(e.created_at).format(time)
    })

    return res.json(r)
  })
})

router.post('/sendreply', (req, res) => {
  // console.log('45456',req.body.mb_id)
  const sql =
    'INSERT INTO `user_comment_reply`( `commentId`, `replyText`) VALUES (?,?)'
  db.queryAsync(sql, [req.body.commentId, req.body.replyText]).then(r => {
    res.json(r)
  })
})

router.post('/updatereply', (req, res) => {
  // console.log('45456',req.body.mb_id)
  const sql =
    'UPDATE `user_comment_reply` SET `replyText` = ? WHERE `commentId` = ?'
  db.queryAsync(sql, [req.body.replyText, req.body.commentId]).then(r => {
    res.json(r)
  })
})

router.post('/delreply', (req, res) => {
  // console.log('45456',req.body.mb_id)
  const sql = 'DELETE FROM `user_comment_reply` WHERE `commentId` = ?'
  db.queryAsync(sql, [req.body.commentId]).then(r => {
    res.json(r)
  })
})

router.post('/upLoadimg', upload.single('file'), (req, res) => {
  const newpath = './public/backend/'
  if (req.file) {
    if (!fs.existsSync(newpath)) {
      fs.mkdirSync(newpath, err => {
        if (err) {
          output.msg = 'failed to make dir'
          res.json(output)
          return
        }
      })
    }
    fs.renameSync(
      req.file.path,
      newpath + '/' + req.file.originalname,
      error => {
        if (error) {
          output.msg = '無法搬動檔案'
          res.json(output)
          return
        }
      }
    )
    res.send('done')
  }
})

router.get('/inputData', (req, res) => {
  // console.log('45456',req.body.mb_id)
  const inputData =
    'INSERT INTO `items`( `name`, `itemName`, `itemImg`, `itemDescription`,`itemDescription2`,`itemPrice`,`itemQty`,`itemCategoryId`,`data`,`data2`,`data3`,`data4`,`data5`,`data6`,`data7`,`data8`,`data9`,`data10`,`data11`,`data12`,`data13`,`data14`,`data15`,`data16`,`data17`,`data18`,`data19`,`data20`,`data21`,`data22`,`data23`,`data24`,`data25`,`data26`,`data27`,`data28`,`data29`,`data30`,`data31`,`data32`,`data33`,`data34`,`data35`,`data36`,`data37`,`data38`,`data39`,`data40`,`data41`,`data42`,`data43`,`data44`,`data45`,`data46`,`data47`,`data48`,`data49`,`data50`,`data51`,`data52`,`data53`,`data54`,`data55`,`data56`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)'

  db.queryAsync(inputData, [
    'GARMIN',
    'GARMIN Legacy Saga傳奇星戰系列',
    '0.jpg',
    '●主題式應用程式/限定版優選材質\n●靈感來自您喜愛的超級英雄\n●GARMIN PAY/音樂儲存\n●健康偵測/螢幕指導訓練',
    '主題式應用程式/限定版優選材質\n靈感來自您喜愛的超級英雄\nGARMIN PAY/音樂儲存\n健康偵測/螢幕指導訓練',
    '$13,990',
    '599',
    '穿戴式裝置',
    '活動追蹤/ 跑步',
    '繁體中文 /英文',
    '3: 4.4 x 4.4 x 1.13 公分3S: 3.9 x 3.9 x 1.09 公分',
    '0.89  x 1.83 公分',
    '72 x 132 畫素',
    '隱藏式OLED觸控螢幕',
    '3: 29.6公克 3S: 24.5公克',
    '矽膠',
    '強化纖維聚合物',
    '-',
    '充電式鋰電池',
    '手錶模式：最長可額外多達一週手錶模式：最長可達 4 天',
    '游泳防水等級',
    '七筆計時活動，14天活動追蹤資料',
    'BLE / ANT+',
    'USB充電線',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
    '●',
  ]).then(r => {
    let final = []
    for (let i = 0; i < 5; i++) {
      const inputMultipleData =
        'INSERT INTO `multiple_images` (`multipleImageImg`,`itemId`,`itemName`) VALUES (?,?,?)'
      db.queryAsync(inputMultipleData, [
        `${i}.jpg`,
        r.insertId,
        `GARMIN Legacy Saga傳奇星戰系列`,
      ]).then(end => {
        final.push(end)
      })
    }
    res.json('done')
  })
})

// 隨機寫入訂單資料
router.get('/fakeorder/stop', (req, res) => {
  // console.log('45456',req.body.mb_id)
  const sqlmbGet =
    'INSERT INTO `orderlist`( `csId`, `total`, `paymentType`, `shippingWay`, `outStatus`,`created_at`) VALUES (?,?,?,?,?,?)'
  // const sqlcpCount = 'UPDATE `coupon` SET `cp_getedCount`= `cp_getedCount`  + 1 WHERE `cp_id` = ?'
  const nameArray = [
    '蔡家榮',
    '陳慈來',
    '司元妍',
    '楊方睿',
    '丁哲瑋',
    '林宜潔',
    '葉財松',
    '林雅惠',
    '張柏宇',
    '宗雅文',
    '姜明哲',
    '張若治',
    '吳欣娥',
    '張怡如',
    '王珮君',
    '柳天聖',
    '李政輝',
    '陶冠傑',
    '林子友',
    '傅旺惠',
    '蔡雅雪',
    '劉倩喜',
    '夏初俐',
    '李俊毅',
    '白岱鳳',
    '黃柏竹',
    '林富瑋',
    '呂佳易',
    '陳思涵',
    '江琳毓',
    '涂佳燕',
    '何祥亞',
    '黃惠智',
    '林永羽',
    '王任合',
    '吳鴻星',
    '彭靖昀',
    '祁彥均',
    '林世哲',
    '翁鈺婷',
    '傅威任',
    '侯巧龍',
    '周佳玲',
    '彭羽啟',
    '王湘婷',
    '張水俐',
    '陳雅慧',
    '施桂昇',
    '李惠君',
    '郭皓慈',
    '黃子豪',
    '蔡剛吟',
    '蘇家銘',
    '吳孟哲',
    '張佳燕',
    '張俊德',
    '賴芳泰',
    '阮智文',
    '黃志忠',
    '李雅倫',
    '錢俐仁',
    '施進恩',
    '陳寧勳',
    '梁振瑋',
    '陳慧貞',
    '蔡白如',
    '陳如妹',
    '林家中',
    '周靜怡',
    '陳雅筑',
    '謝建宏',
    '林秋竹',
    '黎艾蘋',
    '鄭婉婷',
    '何峻傑',
    '張竣傑',
    '陳昭中',
    '曹志杰',
    '王添馨',
    '鄭振宇',
    '丁惠君',
    '張美玉',
    '馮佩珊',
    '曾冠茜',
    '賴碧昕',
    '陳禎群',
    '李左蘭',
    '楊禎海',
    '黃嘉雯',
    '劉孝和',
    '郭馨平',
    '陳怡君',
    '張彥良',
    '林政榮',
    '李彥玟',
    '邱科萍',
    '傅冠谷',
    '張泰辛',
    '汪家欣',
    '王孝維',
    '吳旭方',
    '葛鈺文',
    '林建瑋',
    '謝明博',
    '劉信仲',
    '呂長蕙',
    '蔡孟琦',
    '黃雅謙',
    '楊靜芳',
    '呂雅芳',
    '高宜潔',
    '白美玉',
    '洪玄彥',
    '謝怡珊',
    '黃思涵',
    '陳佩琪',
    '鄭宜芳',
    '林志如',
    '江淑貞',
    '錢政達',
    '李佳海',
    '蔡品江',
    '張景書',
    '王佳伶',
    '林麗萍',
    '鄧軒豪',
    '劉宗憲',
    '李雅玲',
    '徐建豪',
    '賴曜宇',
    '黃冰能',
    '蔡劭仁',
    '黃佑霖',
    '王婷婷',
    '荀國瑄',
    '黃瑩勇',
    '林家榮',
    '丁萱菁',
    '張俊宏',
    '葉昆岑',
    '林子杰',
    '徐美玲',
    '吳孟亦',
    '黃智伸',
    '陳彥亞',
    '張怡君',
    '梁瓊慧',
    '潘少威',
    '李耀德',
    '楊萱云',
    '梁家華',
    '蘇怡婷',
    '張景雨',
    '倪哲銘',
    '陳嘉和',
    '朱秉邦',
    '孫怡璇',
    '陳永韋',
    '蔡辰航',
    '陳慶源',
    '陳宥堅',
    '侯愛夢',
    '陳芳慧',
    '趙淑媛',
    '馮胤天',
    '翁怡雯',
    '藍惠如',
    '謝俊男',
    '伊政翰',
    '陳宗翰',
    '趙竣傑',
    '施雅雯',
    '賴仰伶',
    '王昱君',
    '黃宛儒',
    '謝明斌',
    '郭文宏',
    '葉信柏',
    '陳淑婷',
    '劉佳春',
    '邱雅萍',
    '吳財彬',
    '王威貞',
    '陳建梅',
    '姚怡潔',
    '許美玲',
    '程雅婷',
    '於書龍',
    '黃呈行',
    '金宜潔',
    '林俊諭',
    '陳文山',
    '李宜欣',
    '林希男',
    '顏嘉祥',
    '吳柏明',
    '孫俊豪',
    '陳雅嵐',
    '李瓊慧',
    '李靜順',
    '蔡緯海',
    '吳宗翰',
    '謝文廷',
    '楊建銘',
    '袁美華',
    '林珈斌',
    '張雅文',
    '陳美慧',
    '黃柏信',
    '楊冠儒',
    '李政宏',
    '劉佳霖',
    '蔡旺睿',
    '芮蓉揚',
    '賁淑真',
    '張家瑜',
    '連伯慧',
    '林志忠',
    '劉美恭',
    '黃庭順',
    '王必政',
    '黃宛玲',
    '林珍均',
    '王文甫',
    '張如君',
    '謝麗芬',
    '王詩紹',
    '夏上丞',
    '陳美珍',
    '陳育柏',
    '陳盈珊',
    '吳秋南',
    '許智康',
    '謝志偉',
    '蔣雅茹',
    '陳振喬',
    '戎柏豪',
    '陳聖恬',
    '王懿珮',
    '劉怡菱',
    '洪凱婷',
    '王木惟',
    '曾明輝',
    '劉怡伶',
    '邱登珠',
    '樂宗翰',
    '邱書瑋',
    '曾佩君',
    '郭宗翰',
    '張志杰',
    '黃哲蓁',
    '舒鎮鈺',
    '蔡佩民',
    '洪瑋婷',
    '林雅雯',
    '張仁豪',
    '趙順群',
    '蔡佳琇',
    '鄭羽諭',
    '吳明順',
    '王淑屏',
    '林姿臻',
    '楊淑盛',
    '黃家偉',
    '潘佳穎',
    '曾靜宜',
    '吳亦林',
    '何湖彬',
    '金科琳',
    '柯怡廷',
    '楊怡珊',
    '葉姿吟',
    '宋添禮',
    '蔡明哲',
    '劉彥來',
    '錢士弘',
    '王于庭',
    '劉文富',
    '陳淑娟',
    '王奕君',
    '林彥任',
    '藍雯綺',
    '邱坤彬',
    '張哲榮',
    '黃詩辛',
    '蔡俊霖',
    '強家豪',
    '沈佐能',
    '廖偉如',
    '張惠珠',
    '李婉貴',
    '蔡淑華',
    '陳怡伶',
    '高文華',
    '蔣喜雪',
    '吳育廷',
    '陳石薇',
    '黃孟修',
    '馬雅芳',
    '陳合妮',
    '林建玉',
    '蔡雅雯',
    '劉季亦',
    '李月蘋',
    '程俊豪',
    '陳宗湖',
    '林盈育',
    '吳旻毓',
    '許茹典',
    '陳建娥',
    '鄭彥智',
    '周振豪',
    '王春芃',
    '包新順',
    '黃東雅',
    '黃惠婷',
    '李士哲',
    '諸淑惠',
    '戴山聿',
    '陳思恩',
    '吳桂貴',
    '王柏容',
    '林盈中',
    '童怡禎',
    '陳詩清',
    '錢志瑋',
    '涂建勳',
    '蔡惠娟',
    '王喬禾',
    '邱瓊文',
    '侯奕君',
    '林宜毓',
    '鄭怡君',
    '尤姿妤',
    '翁佩璇',
    '張淑姍',
    '鄧人宣',
    '黃欣怡',
    '鄭雅淳',
    '魏淑珍',
    '梁蘭忠',
    '李冠霖',
    '馮書瑋',
    '洪靜侑',
    '陳威廷',
    '柯信豪',
    '張韋恬',
    '周勝彬',
    '張昀睿',
    '黃思丹',
    '曾力偉',
    '盧佩君',
    '林威宇',
    '呂典生',
    '黃慈卿',
    '鄭麗君',
    '李木珊',
    '荀岳茜',
    '張容冰',
    '張美意',
    '柳薇紹',
    '鄭伊陽',
    '林志其',
    '王博文',
    '劉語榮',
    '鍾明中',
    '狄婉州',
    '韓至書',
    '孫惠玲',
    '陳冠娥',
    '鍾豪民',
    '陳正貞',
    '杜華江',
    '鄭宇軒',
    '謝兆姍',
    '陳立冰',
    '鄧采城',
    '蔡明毓',
    '楊智芳',
    '林韋平',
    '詹雅玲',
    '羅建志',
    '陳禎毓',
    '楊婉如',
    '吳亭忠',
    '黃姿靖',
    '邱婷丹',
    '張雅云',
    '姚惠雯',
    '趙易倫',
    '張奕廷',
    '鄭勝丹',
    '黃月杰',
    '陳子傑',
    '李智傑',
    '洪淑元',
    '洪威德',
    '許文龍',
    '黃子翔',
    '趙岱妃',
    '黃富綠',
    '童佳宏',
    '崔宛真',
    '張若源',
    '許嘉桓',
    '鄭冠霖',
    '劉辰洋',
    '張明翰',
    '張雅易',
    '林瑞紫',
    '王文幸',
    '陳俊貴',
    '李子傑',
    '彭彥宏',
    '黃孟勳',
    '姚林儀',
    '張佳俐',
    '陳柏一',
    '劉淑娟',
    '溫宗翰',
    '林俊茹',
    '李慧娟',
    '王寶柔',
    '李俊達',
    '楊舒輝',
    '周冠良',
    '王翰玲',
    '楊家瑜',
    '楊俊嘉',
    '黃建霖',
    '崔怡潔',
    '李明珠',
    '張美玲',
    '袁思妤',
    '韓昱宏',
    '涂芳瑜',
    '黃雅君',
    '徐文豪',
    '黃雅佳',
    '顏左心',
    '楊治蘭',
    '賴奕祥',
    '劉珈屏',
    '樊俊豪',
    '王詩陽',
    '陳美堯',
    '陳夢士',
    '鄭鈺政',
    '黃歡合',
    '吳雅琳',
    '陳麗堯',
    '陳裕翔',
    '陳彥發',
    '張雲卉',
    '鄧佩珊',
    '許惠映',
    '顏鈺雯',
    '傅舒婷',
    '明淑玲',
    '張怡均',
    '許雅穎',
    '黃啟其',
    '許冠伶',
    '李佳蓉',
    '鄭育誠',
    '熊小茹',
    '鄧萱凱',
    '李岳任',
    '吳俊偉',
    '林柏發',
    '曾靜怡',
    '張淑念',
    '杜苑臻',
    '林宜郁',
    '夏宜潔',
    '林雅君',
    '張俊杰',
    '林嘉丞',
    '黃夢豐',
    '郭重杰',
    '洪昭茂',
    '張淑岳',
    '宋倍辰',
    '林筱婷',
    '林莉婷',
    '陳盈輝',
    '陳詠洋',
    '吳柏淑',
    '吳淑惠',
    '楊貞昌',
    '吳冠中',
    '楊佩君',
    '鄧淑娟',
    '詹歡育',
    '謝美玲',
    '葉珊伸',
    '鄧志祥',
    '鄭淑信',
    '陳淑華',
    '辛順天',
    '黃郁琇',
    '鐘博容',
    '傅向志',
    '周淑敏',
    '陳虹智',
    '林靜雯',
    '張木夫',
    '鐘亭菱',
    '陳宜婷',
    '王士銘',
    '陳慧哲',
    '許志竹',
    '葉世航',
    '林翔雅',
    '黃信宏',
    '張珮如',
    '張嘉琪',
    '蔣奕翔',
    '簡子豪',
    '蔡玉婷',
    '張銘康',
    '鄧秀玲',
    '曾淑凡',
    '王姿堯',
    '何恆迪',
    '陳美君',
    '洪嘉佩',
    '陳建聖',
    '王鈺雯',
    '張智傑',
    '羊柏芷',
    '李軍宇',
    '宣志成',
    '涂靜怡',
    '蘇易泰',
    '吳月寧',
    '蔡彥均',
    '陳妍慈',
    '林怡坤',
    '邱怡芳',
    '林孟修',
    '黃巧喜',
    '廖木彬',
    '王郁屏',
    '王千佩',
    '楊宗福',
    '陳水慧',
    '李欣達',
    '陳于倫',
    '黃郁雯',
    '王慧萍',
    '林家銘',
    '曾清恬',
    '黃明珠',
    '陳惠南',
    '吳怡姍',
    '陳麗南',
    '蔡思穎',
    '葉育菁',
    '李俊宇',
    '陳政以',
    '簡姿潔',
    '施泓嬌',
    '王雅惠',
    '蔡正華',
    '李茜容',
    '宗佩玲',
    '王志宇',
    '李堯嘉',
    '吳孟琳',
    '黃琬桂',
    '陳維海',
    '彭友中',
    '朱建銘',
    '徐嘉鴻',
    '李明峰',
    '謝明娟',
    '劉上心',
    '李維友',
    '林美華',
    '劉正弘',
    '張舒涵',
    '黃淑美',
    '吳俊佑',
    '柳芸宸',
    '趙慧君',
    '郭志強',
    '曹為尹',
    '柏意翰',
    '謝佩君',
    '葉雅惠',
    '林丹紋',
    '李淑帆',
    '廉珮雯',
    '謝文義',
    '林曉萍',
    '張志聖',
    '許夙雲',
    '陳惠茹',
    '王志義',
    '陳雅萍',
    '陳思玫',
    '張國尹',
    '張瓊慧',
    '黃哲維',
    '黃玉龍',
    '郭名琴',
    '許雪毓',
    '吳必希',
    '蔡佩君',
    '李于倫',
    '鄭裕以',
    '楊玉華',
    '黃佳琪',
    '陳怡雪',
    '蔡婉婷',
    '陳靜博',
    '童雅雯',
    '朱佳怡',
    '毛順慈',
    '謝明雯',
    '蔡淑慧',
    '劉茂恒',
    '陳耀亞',
    '柴恩學',
    '蔡佩淳',
    '蘇逸凡',
    '李慶娥',
    '梁辰原',
    '黃雅文',
    '劉雅惠',
    '翁麗卿',
    '陳郁桂',
    '吳幼雄',
    '陳逸宇',
    '何秀娟',
    '郭明倫',
    '林淑婷',
    '鄭于幸',
    '丁志明',
    '宋倫桓',
    '陳佩如',
    '蘇俊賢',
    '蔡馨文',
    '林耿恬',
    '陳玉苓',
    '陳俊豪',
    '夏雅茵',
    '林冠均',
    '潘惟華',
    '張柏成',
    '陳易利',
    '賴蓉婷',
    '陳秋花',
    '童鎮宇',
    '陳信宸',
    '楊智能',
    '黃克綠',
    '林佐羽',
    '謝財萍',
    '應宗霖',
    '韓智超',
    '蘇皓霖',
    '林雅雯',
    '張姿亨',
    '蕭天汝',
    '劉嘉紹',
    '林詩忠',
    '唐淑萍',
    '洪任堅',
    '林雅和',
    '蔡幸琦',
    '陳志玫',
    '楊長盛',
    '謝歡月',
    '黃子舜',
    '吳淑惠',
    '劉佐桓',
    '郭瑞俊',
    '林家成',
    '鄭禎成',
    '陳韻和',
    '楊承恩',
    '盧與琳',
    '王亦群',
    '林俊賢',
    '許亭卉',
    '劉嘉鴻',
    '邱承翰',
    '楊雅青',
    '李凱琳',
    '張欣怡',
    '吳姿達',
    '郭蘭仰',
    '王偉伯',
    '蕭雅香',
    '邱宗穎',
    '蔡志鴻',
    '黃雅蘋',
    '吳嘉玲',
  ]
  for (let i = 0; i < nameArray.length; i++) {
    //取得亂數某一個名字
    const nameIndex = Math.floor(Math.random() * nameArray.length)
    const nameFromArray = nameArray[nameIndex]
    //從名字陣列移除
    nameArray.splice(nameIndex, 1)

    const totalAmount =
      Math.floor(Math.random() * 10) * 1000 +
      Math.floor(Math.random() * 10) * 100
    console.log('totalAmount', totalAmount)

    const payType = ['ATM', 'IbonPay', 'CreditCard', 'Cashondelivery']
    const payTypeIndex = Math.floor(Math.random() * payType.length)
    const payTypeFromArray = payType[payTypeIndex]

    const shipType = ['宅配到府', '超商取貨']
    const shipTypeIndex = Math.floor(Math.random() * shipType.length)
    const shipTypeFromArray = shipType[shipTypeIndex]

    const statusType = ['已出貨', '訂單成立', '退貨完成']
    const statusTypeIndex = Math.floor(Math.random() * statusType.length)
    const statusTypeFromArray = statusType[statusTypeIndex]

    const mArray = ['01', '02', '03']
    const mRandom = Math.floor(Math.random() * mArray.length)
    const getMRandom = mArray[mRandom]

    let dayRandom = Math.floor(Math.random() * 28) + 1
    if (dayRandom < 10) dayRandom = `0${dayRandom}`
    let hourRandom = Math.floor(Math.random() * 23)
    if (hourRandom < 10) hourRandom = `0${hourRandom}`
    let minusRandom = Math.floor(Math.random() * 59)
    if (minusRandom < 10) minusRandom = `0${minusRandom}`
    let secRandom = Math.floor(Math.random() * 59)
    if (secRandom < 10) secRandom = `0${secRandom}`

    const time = `2020-${getMRandom}-${dayRandom} ${hourRandom}:${minusRandom}:${secRandom}`
    //   2020-03-29 06:44:19

    //   res.writeHead(200, {
    //     'Content-Type': 'text/html;charset=utf-8',
    //   })

    //   res.end(
    //     `nameIndex:${nameIndex}<BR/>, nameArray.length: ${nameArray.length}<BR/>, totalAmount:${totalAmount}<BR/>,payTypeFromArray:${payTypeFromArray}<BR/>,shipTypeFromArray:${shipTypeFromArray}<BR/>,statusType:${statusTypeFromArray} `
    //   )
    db.queryAsync(sqlmbGet, [
      nameFromArray,
      totalAmount,
      payTypeFromArray,
      shipTypeFromArray,
      statusTypeFromArray,
      time,
    ]).then(r => {
      //   db.queryAsync(sqlcpCount, [req.body.cp_id]).then(r => {
      // res.json(r)
      //   })
    })
  }
  res.end('done')
})

module.exports = router
